name: Build and Push Docker Image to ECR

on:
  workflow_dispatch:
    inputs:
      ecr-registry:
        description: 'The Amazon ECR registry URL'
        required: true
        type: string
      ecr-repository:
        description: 'The Amazon ECR repository name'
        required: true
        type: string
      aws-region:
        description: 'The AWS region'
        required: true
        type: string
      image-tag:
        description: 'The Docker image tag'
        required: false
        type: string
      dockerfile-path:
        description: 'The path to the Dockerfile'
        required: true
        type: string
      brand_name:
        description: 'select the brand'
        required: true
        type: string
        default: TOUFIK

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Versioning Logic Based on Commit Messages
      - name: Determine Version Bump
        id: version-bump
        run: |
          echo "Checking the last commit message for version bump keywords..."
          LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Last commit message: $LAST_COMMIT_MSG"
          
          # Read the existing version from version.txt, or set default if not present
          if [ -f "${{ env.VERSION_FILE }}" ]; then
            CURRENT_VERSION=$(cat ${{ env.VERSION_FILE }})
          else
            CURRENT_VERSION="1.0.0"
          fi

          # Extract major, minor, patch
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)

          # Decide version bump based on commit message
          if echo "$LAST_COMMIT_MSG" | grep -q "MAJOR"; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif echo "$LAST_COMMIT_MSG" | grep -q "MINOR"; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          # New version calculation
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          
          # Save the new version to version.txt and GitHub environment variable
          echo "$NEW_VERSION" > ${{ env.VERSION_FILE }}
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

          # Set GitHub output variable
          echo "::set-output name=newTag::$NEW_VERSION"

      - name: Commit and Push Updated Version
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add ${{ env.VERSION_FILE }}
          git commit -m "Bump version to ${{ env.NEW_VERSION }}"
          git push origin HEAD:main

      - name: Set up QEMU (for multi-platform builds)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx (for multi-platform builds)
        uses: docker/setup-buildx-action@v2
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets[format('{0}_AWS_ACCESS_KEY_ID', inputs.brand_name)] }}
          aws-secret-access-key: ${{ secrets[format('{0}_AWS_SECRET_ACCESS_KEY', inputs.brand_name)] }}
          aws-region: ap-south-1

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.dockerfile-path }}
          file: ${{ inputs.dockerfile-path }}/Dockerfile
          push: true
          tags: ${{ inputs.ecr-registry }}/${{ inputs.ecr-repository }}:${{ env.NEW_VERSION }}

      - name: Image digest (for reference)
        run: echo ${{ steps.build-and-push.outputs.digest }}

      - name: Create Git Tag for Version
        run: |
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release version ${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"
