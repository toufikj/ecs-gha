name: Prod Automate Build-Push, Update-Task

on:
  workflow_dispatch:

env:
  BRAND_NAME: "TOUFIK"
  AWS_REGION: "ap-south-1"
  ECR_REGISTRY: "metabase"
  ECR_REPOSITORY: "metabase"
  ECS_SERVICE: "stage-metabase-service"
  ECS_CLUSTER: "demo"
  ECS_TASK_DEFINITION: "stage-metabase-task"
  CONTAINER_NAME: "metabase"

  ENVIRONMENT_VARIABLES: '[
    {"name": "MB_DB_HOST", "value": "${{ secrets.MB_DB_HOST }}"},
    {"name": "MB_DB_PORT", "value": "${{ secrets.MB_DB_PORT }}"},
    {"name": "MB_DB_DBNAME", "value": "${{ secrets.MB_DB_DBNAME }}"},
    {"name": "MB_DB_USER", "value": "${{ secrets.MB_DB_USER }}"}
  ]'

  SECRETS: '[
    {"name": "MB_DB_PASS", "value": "arn:aws:secretsmanager:ap-south-1:783764579443:secret:db/pass-hTOFPK"}
  ]'

jobs:
  get-env-vars:
    name: Get Environment Vars and Secrets
    runs-on: ubuntu-latest
    outputs:
      BRAND_NAME: "${{ env.BRAND_NAME }}"
      AWS_REGION: "${{ env.AWS_REGION }}"
      ECR_REGISTRY: "${{ env.ECR_REGISTRY }}"
      ECR_REPOSITORY: "${{ env.ECR_REPOSITORY }}"
      ECS_SERVICE: "${{ env.ECS_SERVICE }}"
      ECS_CLUSTER: "${{ env.ECS_CLUSTER }}"
      ECS_TASK_DEFINITION: "${{ env.ECS_TASK_DEFINITION }}"
      CONTAINER_NAME: "${{ env.CONTAINER_NAME }}"
      ENVIRONMENT_VARIABLES: "${{ env.ENVIRONMENT_VARIABLES }}"
      SECRETS: "${{ env.SECRETS }}"
    steps:
      - run: echo "null"

  create-json:
    name: Generate JSON File
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Convert ENVIRONMENT_VARIABLES and SECRETS to JSON
        run: |
          echo '${{ env.ENVIRONMENT_VARIABLES }}' | jq '.' > env.json
          echo '${{ env.SECRETS }}' | jq '.' > secrets.json
          

      - name: Display JSON File
        run: |
          cat env.json
          echo "Secrets--"
          cat secrets.json

      - name: Upload JSON as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: environment-variables
          path: env.json
      - name: Upload JSON as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: secrets
          path: secrets.json    

  update-ecs-task-and-service:
    needs: [create-json, get-env-vars]
    uses: ./.github/workflows/update-task.yml  # âœ… Calls reusable workflow
    with:
      brand_name: ${{ needs.get-env-vars.outputs.BRAND_NAME }}
      aws_region: ${{ needs.get-env-vars.outputs.AWS_REGION }}
      ECR_REGISTRY: ${{ needs.get-env-vars.outputs.ECR_REGISTRY }}
      ECR_REPOSITORY: ${{ needs.get-env-vars.outputs.ECR_REPOSITORY }}
      ECS_CLUSTER_NAME: ${{ needs.get-env-vars.outputs.ECS_CLUSTER }}
      ECS_SERVICE_NAME: ${{ needs.get-env-vars.outputs.ECS_SERVICE }}
      ECS_TASK_DEFINITION: ${{ needs.get-env-vars.outputs.ECS_TASK_DEFINITION }}
      CONTAINER_NAME: ${{ needs.get-env-vars.outputs.CONTAINER_NAME }}
    secrets: inherit
